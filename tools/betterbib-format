#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
from __future__ import print_function, unicode_literals

import argparse
import collections
import sys

import betterbib
from pybtex.database.input import bibtex


def _main():
    args = _parse_cmd_arguments()

    data = bibtex.Parser().parse_file(args.infile)

    # Use an ordered dictionary to make sure that the entries are written out
    # sorted by their BibTeX key if demanded.
    od = collections.OrderedDict(
        sorted(data.entries.items())
        if args.sort_by_bibkey
        else data.entries.items()
        )

    betterbib.write(od, args.outfile, args.delimeter_type)
    return


def _parse_cmd_arguments():
    parser = argparse.ArgumentParser(description='Reformat BibTeX files.')

    parser.add_argument(
        '-v', '--version',
        help='display version information',
        action='version',
        version='%(prog)s {}, Python {}'.format(
            betterbib.__version__, sys.version
            )
        )
    parser.add_argument(
        'infile',
        nargs='?',
        type=argparse.FileType('r'),
        default=sys.stdin,
        help='input BibTeX file (default: stdin)'
        )
    parser.add_argument(
        'outfile',
        nargs='?',
        type=argparse.FileType('w'),
        default=sys.stdout,
        help='output BibTeX file (default: stdout)'
        )
    parser.add_argument(
        '-b', '--sort-by-bibkey',
        action='store_true',
        help='sort entries by BibTeX key (default: false)'
        )
    parser.add_argument(
        '-d', '--delimeter-type',
        choices=[
            'braces',
            'quote',
            ],
        default='braces',
        help=(
            'which delimeters to use in the output file '
            '(default: braces {...})'
            ),
        )
    parser.add_argument(
        '-u', '--doi-url-type',
        choices=[
            'unchanged',
            'new',
            'short'
            ],
        default='new',
        help=(
            'DOI URL (new: https://doi.org/<DOI> (default), '
            'short: https://doi.org/abcde)'
            ),
        )
    return parser.parse_args()


if __name__ == '__main__':
    _main()
